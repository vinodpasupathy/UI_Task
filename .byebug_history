exit
puts "workin"
unless :file_1.nil?
exit
 unless :file_1.nil?
if not file_1 .blank?
exit
if not file_1 .blank?
if not[:file_1].blank?
if params[:face][:file_1].blank!;
if params[:face][:file_1].blank!
if params[:face][:file_1].blank
if not params[:face][:file_1].blank
if not params[:face][:file_1].blank?;
if not params[:face][:file_1].blank?
exit
@fn[0]
@fn
exit
@fn
exit
@fn[0]
@fn[1]
@fn[0]
@fn
exit
*filename
filename
@fn
exit
@fn
ar[0]
ar[1]
@fn
filename
[i]
i
exit
ar.name
ar.filename
ar[i].filename
ar[0].filename
m
filename
tempfile
ar.tempfile
ar[0]
ar
filename
@fn
line
exit
filename
[i]
ar[0]
i
ar[0]
ar[1]
ar.all
ar
i.filename
[i].filename
[i].name
[i]
i
exit
@fn.all
@fn[1]
@fn
exit
@fn
@fn[0]
fn[0]
exit
i.read
[i].read
[i].name
[i.name]
[i[0]]
i[0]
[i].filename
[i]
i
exit
i
ar[1]
ar[0]
m[0]
m
exit
m[0]
m
exit
ar[0]
ar
i
i[0]
ar[i]
ar[1]
ar[0]
ar
i.filename
puts i
exit
puts c[3]
puts c[2]
puts c[1]
puts c.first
puts c.count
puts c
c.split(",")
c.split(",").count
c.count
c=b-a
b-a
a-b
if a == b
exit
 a=File.open(file1.tempfile,"r",:headers=>'true').collect{|o|o.chomp}
a.filename
filename
a.read
File1
File1.read
File.read
exit
Pathname
Rails.root
Rails.root.filename
filename.root
filename.path
file_path
filename
